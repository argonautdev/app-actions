{{- $name := include "argonaut-deployment.uname" . -}}
{{- $chartName := .Chart.Name -}}
{{- $releaseName := .Release.Name -}}
{{- $releaseService := .Release.Service -}}
{{- $host := .Values.host -}}

{{- range .Values.services }}
{{- if .ingress }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: "{{ $name }}-{{- .name -}}-gw"
  labels:
    heritage: {{ $releaseService | quote }}
    release: {{ $releaseName | quote }}
    chart: {{ $chartName | quote }}
    app: {{ $name | quote }}
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
    - port:
        name: "{{ $name }}-{{- .name -}}"
        number: {{ .port }}
        protocol: {{ .protocol }}
      hosts:
        {{- if or (empty $host) (eq $host "local") }}
        - "*"
        {{- else }}
        - {{ $host }}
        {{- end }}
      {{- if eq .ingress.tls "terminated" }}
      tls:
        mode: SIMPLE
        credentialName: ingress-letsencrypt  # either this or cert and key
      {{- end }}

{{- end }}
---
{{- end }}


---
# Configure Virtual Services
{{- range .Values.services }}
{{- if .ingress }}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "{{ $name }}-{{- .name -}}-vs"
  labels:
    heritage: {{ $releaseService | quote }}
    release: {{ $releaseName | quote }}
    chart: {{ $chartName | quote }}
    app: {{ $name | quote }}
spec:
  hosts:
    {{- if or (empty $host) (eq $host "local") }}
    - "*"
    {{- else }}
    - {{ $host }}
    {{- end }}
  gateways:
    - "{{ $name }}-{{- .name -}}-gw"
  exportTo:
    - "*" # TBD - env interaction
  {{- if or (eq .protocol "http") (and (eq .protocol "tls") (eq .ingress.tls "terminated")) }}
  http:
    - match:
        - uri:
            prefix: {{ .ingress.path }}
      route:
        - destination:
            port:
              number: {{ .ingress.port }}
            host: "{{- $name -}} .dev.svc.cluster.local"
  {{- else if and (eq .protocol "tls") (eq .ingress.tls "passthrough") -}}
  # https implementation
  https:
    - match:
      - port: {{ .port }}
        sniHosts:
        - {{ $host }}
      route:
      - destination:
          host: "{{- $name -}} .dev.svc.cluster.local"
  {{- else if eq .protocol "tcp" -}}
  # tcp implementation
  tcp:
  - match:
    - port: {{ .port }}
    route:
    - destination:
        host: "{{- $name -}} .dev.svc.cluster.local"
        port:
          number: {{ .ingress.port }}
  {{- end -}}
{{- end }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "argonaut-deployment.uname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    chart: "{{ .Chart.Name }}"
    release: {{ .Release.Name | quote }}
    app: "{{ template "argonaut-deployment.uname" . }}"
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      chart: "{{ .Chart.Name }}"
      app: "{{ template "argonaut-deployment.uname" . }}"
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        chart: "{{ .Chart.Name }}"
        app: "{{ template "argonaut-deployment.uname" . }}"
        release: {{ .Release.Name | quote }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations -}}
        {{ $key }}: {{ $value | quote }}
        {{- end -}}
        {{/* This forces a restart if the configmap has changed */}}
        {{- if .Values.extraConfig }}
        configchecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
    spec:
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      {{- if .Values.serviceAccount }}
      serviceAccount: {{ .Values.serviceAccount }}
      {{- end }}
      volumes:
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- if .Values.extraConfig }}
        - name: {{ template "argonaut-deployment.uname" . }}-config
          configMap:
            name: {{ template "argonaut-deployment.uname" . }}-config
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
      {{- if .Values.extraInitContainers }}
      initContainers:
{{ toYaml .Values.extraInitContainers | indent 6 }}
      {{- end }}
      containers:
      - name: "{{ template "argonaut-deployment.name" . }}"
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        image: "{{ template "argonaut-deployment.imageName" . }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        env:
{{ toYaml .Values.extraEnvs | indent 10 }}
{{- if .Values.envFrom }}
        envFrom:
{{ toYaml .Values.envFrom | indent 10 }}
{{- end }}
{{- if .Values.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
{{- end }}
{{- if .Values.lifecycle }}
        lifecycle:
{{ toYaml .Values.lifecycle | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
          {{- range .Values.secretMounts }}
          - name: {{ .name }}
            mountPath: {{ .path }}
            {{- if .subPath }}
            subPath: {{ .subPath }}
            {{- end }}
          {{- end }}
          {{- range $path, $config := .Values.extraConfig }}
          - name: extraconfig
            mountPath: /usr/share/{{ template "argonaut-deployment.uname" . }}/config/{{ $path }}
            subPath: {{ $path }}
          {{- end -}}
      {{- if .Values.extraContainers }}
{{ toYaml .Values.extraContainers | indent 6 }}
      {{- end }}

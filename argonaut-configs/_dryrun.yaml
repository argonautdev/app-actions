---
# Source: argonaut-configs/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "myappname-pdb"
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: "myappname"
---
# Source: argonaut-configs/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: myappname
  labels:
    heritage: "Helm"
    release: "RELEASE-NAME"
    chart: "argonaut-configs"
    app: "myappname"
  annotations: {}
spec:
  type: LoadBalancer
  selector:
    release: "RELEASE-NAME"
    chart: "argonaut-configs"
    app: "myappname"
  ports:
    - name: http
      protocol: TCP
      port: 80

# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: myappname-headless
#   labels:
#     heritage: "Helm"
#     release: "RELEASE-NAME"
#     chart: "argonaut-configs"
#     app: "myappname"
#
#   annotations:
#     service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
# spec:
#   clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
#   # Create endpoints also if the related pod isn't ready
#   publishNotReadyAddresses: true
#   selector:
#     app: "myappname"
#   ports:
#   - name: http
#     port: 80
#   - name: transport
#     port:
---
# Source: argonaut-configs/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myappname
  labels:
    heritage: "Helm"
    chart: "argonaut-configs"
    release: "RELEASE-NAME"
    app: "myappname"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      chart: "argonaut-configs"
      app: "myappname"
      release: "RELEASE-NAME"
  template:
    metadata:
      labels:
        heritage: "Helm"
        chart: "argonaut-configs"
        app: "myappname"
        release: "RELEASE-NAME"
      annotations:

    spec:
      securityContext: {}
      volumes:
      containers:
        - name: "argonaut-configs"
          securityContext: {}
          image: "nginx:latest"
          imagePullPolicy: "IfNotPresent"
          env:
          resources:
            limits:
              cpu: 200m
              memory: 256M
            requests:
              cpu: 200m
              memory: 256M
          volumeMounts:

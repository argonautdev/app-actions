---
metadata:
  annotations: # application specific
    argocd.argoproj.io/sync-options: Prune=false
    # argocd.argoproj.io/compare-options: IgnoreExtraneous

spec: # ArgoCD instance specific
  syncPolicy:
    automated:
      prune: false # Conservative, Debatable
      selfHeal: false # Conservative, Debatable

server:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - "*"
---
# PROJECTS

# default
spec:
  sourceRepos:
    - "*"
  destinations:
    - namespace: "*"
      server: "*"
  clusterResourceWhitelist:
    - group: "*"
      kind: "*"
# ##
# argocd proj create myproject -d https://kubernetes.default.svc,mynamespace -s https://github.com/argoproj/argocd-example-apps.git
# argocd proj add-source <PROJECT> <REPO>
# argocd proj remove-source <PROJECT> <REPO>

# argocd proj add-destination <PROJECT> <CLUSTER>,<NAMESPACE>
# argocd proj remove-destination <PROJECT> <CLUSTER>,<NAMESPACE>

# argocd proj allow-cluster-resource <PROJECT> <GROUP> <KIND>
# argocd proj allow-namespace-resource <PROJECT> <GROUP> <KIND>
# argocd proj deny-cluster-resource <PROJECT> <GROUP> <KIND>
# argocd proj deny-namespace-resource <PROJECT> <GROUP> <KIND>

# ---
# # Env management
# argocd app set helm-guestbook --values values-production.yaml

---
istio install
helm template install/kubernetes/helm/istio - name istio
- set tracing.enabled=false
- set ingress.enabled=false
- set gateways.istio-ingressgateway.enabled=true
- set gateways.istio-ingressgateway.sds.enabled=true
- set gateways.istio-egressgateway.enabled=true
- set servicegraph.enabled=false
- set kiali.enabled=true
- set kiali.dashboard.jaegerURL=https://jaeger.local.domain
- set kiali.prometheusAddr=http://prometheus-k8s.monitoring:9090
- set kiali.dashboard.grafanaURL=http://grafana.monitoring:3000
- set prometheus.enabled=false
- set grafana.enabled=false
- set global.proxy.autoInject=disabled
- set global.k8sIngressSelector=ingressgateway
- set global.k8sIngressHttps=false
- set global.tracer.zipkin.address=zipkin.monitoring:9411
- set global.outboundTrafficPolicy.mode=REGISTRY_ONLY
- set galley.enabled=true
- set global.proxy.accessLogFile="/dev/stdout"
- namespace istio-system > install/kubernetes/generated.yaml

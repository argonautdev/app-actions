apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: shadow
  region: us-east-2
nodeGroups:
  - name: spot-1
    availabilityZones: ["us-east-2b"]
    instancePrefix: "argonaut"
    minSize: 0
    maxSize: 5
    desiredCapacity: 4
    # kubeletExtraConfig:
    #   # maxPods: 100
    #   podsPerCore: 10
    volumeSize: 10
    volumeType: gp2
    # volumeEncrypted: true
    iam:
      withAddonPolicies:
        albIngress: true
        autoScaler: true
        cloudWatch: true
        certManager: true
        ebs: true
        fsx: true
        efs: true
    asgMetricsCollection:
      - granularity: 1Minute
        metrics:
          - GroupMinSize
          - GroupMaxSize
          - GroupDesiredCapacity
          - GroupInServiceInstances
          - GroupPendingInstances
          - GroupStandbyInstances
          - GroupTerminatingInstances
          - GroupTotalInstances
    instancesDistribution:
      maxPrice: 0.024 # Comment out to default to OnDemand max price
      instanceTypes: ["t3a.small", "t3a.medium", "t3a.large"] # At least one instance type should be specified
      # instanceTypes: ["t3a.medium"] # At least one instance type should be specified
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
      spotAllocationStrategy: "lowest-price" # "capacity-optimized"
    taints:
      spotInstance: "true:PreferNoSchedule"
    tags:
      environment: "dev"
      node-class: "M"
      k8s.io/cluster-autoscaler/node-template/label/lifecycle: Ec2Spot
      k8s.io/cluster-autoscaler/node-template/label/aws.amazon.com/spot: "true"
      k8s.io/cluster-autoscaler/node-template/label/gpu-count: "0"
      k8s.io/cluster-autoscaler/node-template/taint/spotInstance: "true:PreferNoSchedule"
      k8s.io/cluster-autoscaler/enabled: "true"
    labels:
      lifecycle: Ec2Spot
      aws.amazon.com/spot: "true"
  # - name: ondemand-1
  #   desiredCapacity: 0
  #   minSize: 0
  #   maxSize: 3
  #   volumeSize: 10
  #   volumeType: gp2
  #   # volumeEncrypted: true
  #   instanceType: t3a.small
  #   instancePrefix: "argonaut"
  #   availabilityZones: ["us-east-2b"]
  #   labels:
  #     node-class: "S"
  #   tags:
  #     # EC2 tags required for cluster-autoscaler auto-discovery
  #     k8s.io/cluster-autoscaler/node-template/label/lifecycle: OnDemand
  #     k8s.io/cluster-autoscaler/node-template/label/aws.amazon.com/spot: "false"
  #     k8s.io/cluster-autoscaler/node-template/label/gpu-count: "0"
  #     k8s.io/cluster-autoscaler/enabled: "true"
  #     environment: "prod"
  #   iam:
  #     withAddonPolicies:
  #       albIngress: true
  #       autoScaler: true
  #       cloudWatch: true
  #       certManager: true
  #       ebs: true
  #       fsx: true
  #       efs: true
# managedNodeGroups:
#   - name: nodegroup-1
#     instanceType: t3a.small
#     availabilityZones: ["us-east-2b"]
#     minSize: 1
#     maxSize: 2
#     desiredCapacity: 2
#     volumeSize: 10
#     volumeType: gp2
#     tags:
#       env: dev
#       node-class: tiny
#   - name: nodegroup-2
#     instanceType: t3a.large
#     availabilityZones: ["us-east-2b"]
#     minSize: 1
#     maxSize: 1
#     desiredCapacity: 1
#     volumeSize: 10
#     volumeType: gp2
#     tags:
#       env: dev
#       node-class: large
#     # ssh:
#     #   publicKeyName: surya-ssh-key

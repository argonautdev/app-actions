apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway
spec:
  selector:
    istio: ingressgateway # use istio default ingress gateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "aws.tritonhq.io"
        # - "argonaut.tritonhq.io"
      # tls:
      #   httpsRedirect: true
    - port:
        number: 443
        name: https
        protocol: HTTPS
      tls:
        mode: SIMPLE
        credentialName: ingress-letsencrypt # must be the same as secret
      hosts:
        - "aws.tritonhq.io"
        - "argonaut.tritonhq.io"
    - port:
        number: 1883
        name: tcp-mqtt-1833
        protocol: TCP
      hosts:
        - "aws.tritonhq.io"
    - port:
        number: 8883
        name: tcp-mqtt-8883
        protocol: TCP
      hosts:
        - "aws.tritonhq.io"

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "hasura"
spec:
  hosts:
    - "aws.tritonhq.io"
  gateways:
    - ingress-gateway
  exportTo:
    - "*"
  http:
    - match:
        - uri:
            prefix: /hasura/
      route:
        - destination:
            port:
              number: 8080
            host: hasura.dev.svc.cluster.local
---

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "grafana-ingress"
spec:
  hosts:
    - "argonaut.tritonhq.io"
  gateways:
    - ingress-gateway
  exportTo:
    - "*"
  http:
    - match:
        - uri:
            prefix: /grafana/
      route:
        - destination:
            port:
              number: 3000
            host: grafana.istio-system.svc.cluster.local
---

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "argocd-ingress"
spec:
  hosts:
    - "argonaut.tritonhq.io"
  gateways:
    - ingress-gateway
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: argocd-server.argocd.svc.cluster.local
            port:
              number: 443
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "kiali-ingress"
spec:
  hosts:
    - "argonaut.tritonhq.io"
  gateways:
    - ingress-gateway
  exportTo:
    - "*"
  http:
    - match:
        - uri:
            prefix: /kiali/
      route:
        - destination:
            port:
              number: 20001
            host: kiali.istio-system.svc.cluster.local
---

---
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   name: "device-backend"
# spec:
#   hosts:
#     - "aws.tritonhq.io"
#   gateways:
#     - ingress-gateway
#   exportTo:
#     - "*"
#   http:
#     - match:
#         - uri:
#             prefix: /device-backend/
#       route:
#         - destination:
#             port:
#               number: 3333
#             host: device-backend.dev.svc.cluster.local
# ---
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   name: "mqtt-1883"
# spec:
#   hosts:
#     - "aws.tritonhq.io"
#   gateways:
#     - ingress-gateway
#   exportTo:
#     - "*"
#   tcp:
#     - match:
#         - port: 1883
#       route:
#         - destination:
#             port:
#               number: 1883
#             host: beamd.dev.svc.cluster.local
# ---
# # Source: argonaut-configs/templates/ingress.yaml
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   name: "mqtt-8883"
# spec:
#   hosts:
#     - "aws.tritonhq.io"
#   gateways:
#     - ingress-gateway
#   exportTo:
#     - "*"
#   tcp:
#     - match:
#         - port: 8883
#       route:
#         - destination:
#             port:
#               number: 8883
#             host: beamd.dev.svc.cluster.local
# ---
